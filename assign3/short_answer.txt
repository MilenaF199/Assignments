Make a Class
------------

Q1. Whatâ€™s const-correctness and why is it important?
A1. Const-correctness refers to the practice of using the const keyword in C++ to indicate that 
    certain variables, member functions, or parameters should not be modified. It is important 
    because it helps prevent unintended side effects, improves code readability, and allows the 
    compiler to enforce constraints, leading to safer and more maintainable code.

Q2. Is your class const-correct? How do you know?
A2. Yes, my class is const-correct. I have marked getter functions as const, ensuring they do 
    not modify the object's state. Additionally, private member functions that do not alter 
    member variables are also declared as const, which helps maintain the integrity of the class's 
    data.